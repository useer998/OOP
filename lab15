Form1



namespace FtpClientApp
{
partial class Form1
{
private System.ComponentModel.IContainer components = null;

protected override void Dispose(bool disposing)
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}

private void InitializeComponent()
{
this.txtServer = new System.Windows.Forms.TextBox();
this.txtUsername = new System.Windows.Forms.TextBox();
this.txtPassword = new System.Windows.Forms.TextBox();
this.txtLocalPath = new System.Windows.Forms.TextBox();
this.txtRemotePath = new System.Windows.Forms.TextBox();
this.txtNewRemotePath = new System.Windows.Forms.TextBox();
this.txtOutput = new System.Windows.Forms.TextBox();
this.btnAppend = new System.Windows.Forms.Button();
this.btnDelete = new System.Windows.Forms.Button();
this.btnDownload = new System.Windows.Forms.Button();
this.btnGetModificationTime = new System.Windows.Forms.Button();
this.btnGetSize = new System.Windows.Forms.Button();
this.btnNameList = new System.Windows.Forms.Button();
this.btnList = new System.Windows.Forms.Button();
this.btnMakeDirectory = new System.Windows.Forms.Button();
this.btnRemoveDirectory = new System.Windows.Forms.Button();
this.btnRename = new System.Windows.Forms.Button();
this.btnUpload = new System.Windows.Forms.Button();
this.btnUploadUnique = new System.Windows.Forms.Button();
this.SuspendLayout();
//
// txtServer
//
this.txtServer.Location = new System.Drawing.Point(12, 12);
this.txtServer.Name = "txtServer";
this.txtServer.Size = new System.Drawing.Size(300, 23);
this.txtServer.TabIndex = 0;
this.txtServer.PlaceholderText = "FTP server (ftp://example.com)";
//
// txtUsername
//
this.txtUsername.Location = new System.Drawing.Point(12, 41);
this.txtUsername.Name = "txtUsername";
this.txtUsername.Size = new System.Drawing.Size(145, 23);
this.txtUsername.TabIndex = 1;
this.txtUsername.PlaceholderText = "Username";
//
// txtPassword
//
this.txtPassword.Location = new System.Drawing.Point(167, 41);
this.txtPassword.Name = "txtPassword";
this.txtPassword.Size = new System.Drawing.Size(145, 23);
this.txtPassword.TabIndex = 2;
this.txtPassword.PlaceholderText = "Password";
this.txtPassword.UseSystemPasswordChar = true;
//
// txtLocalPath
//
this.txtLocalPath.Location = new System.Drawing.Point(12, 70);
this.txtLocalPath.Name = "txtLocalPath";
this.txtLocalPath.Size = new System.Drawing.Size(300, 23);
this.txtLocalPath.TabIndex = 3;
this.txtLocalPath.PlaceholderText = "Local path (for upload/download)";
//
// txtRemotePath
//
this.txtRemotePath.Location = new System.Drawing.Point(12, 99);
this.txtRemotePath.Name = "txtRemotePath";
this.txtRemotePath.Size = new System.Drawing.Size(300, 23);
this.txtRemotePath.TabIndex = 4;
this.txtRemotePath.PlaceholderText = "Remote path (file or directory)";
//
// txtNewRemotePath
//
this.txtNewRemotePath.Location = new System.Drawing.Point(12, 128);
this.txtNewRemotePath.Name = "txtNewRemotePath";
this.txtNewRemotePath.Size = new System.Drawing.Size(300, 23);
this.txtNewRemotePath.TabIndex = 5;
this.txtNewRemotePath.PlaceholderText = "New remote path (for rename)";
//
// txtOutput
//
this.txtOutput.Location = new System.Drawing.Point(12, 157);
this.txtOutput.Multiline = true;
this.txtOutput.Name = "txtOutput";
this.txtOutput.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
this.txtOutput.Size = new System.Drawing.Size(400, 150);
this.txtOutput.TabIndex = 6;
//
// btnAppend
//
this.btnAppend.Location = new System.Drawing.Point(318, 12);
this.btnAppend.Name = "btnAppend";
this.btnAppend.Size = new System.Drawing.Size(94, 23);
this.btnAppend.TabIndex = 7;
this.btnAppend.Text = "APPE";
this.btnAppend.UseVisualStyleBackColor = true;
this.btnAppend.Click += new System.EventHandler(this.btnAppend_Click);
//
// btnDelete
//
this.btnDelete.Location = new System.Drawing.Point(418, 12);
this.btnDelete.Name = "btnDelete";
this.btnDelete.Size = new System.Drawing.Size(94, 23);
this.btnDelete.TabIndex = 8;
this.btnDelete.Text = "DELE";
this.btnDelete.UseVisualStyleBackColor = true;
this.btnDelete.Click += new System.EventHandler(this.btnDelete_Click);
//
// btnDownload
//
this.btnDownload.Location = new System.Drawing.Point(518, 12);
this.btnDownload.Name = "btnDownload";
this.btnDownload.Size = new System.Drawing.Size(94, 23);
this.btnDownload.TabIndex = 9;
this.btnDownload.Text = "RETR";
this.btnDownload.UseVisualStyleBackColor = true;
this.btnDownload.Click += new System.EventHandler(this.btnDownload_Click);
//
// btnGetModificationTime
//
this.btnGetModificationTime.Location = new System.Drawing.Point(318, 41);
this.btnGetModificationTime.Name = "btnGetModificationTime";
this.btnGetModificationTime.Size = new System.Drawing.Size(94, 23);
this.btnGetModificationTime.TabIndex = 10;
this.btnGetModificationTime.Text = "MDTM";
this.btnGetModificationTime.UseVisualStyleBackColor = true;
this.btnGetModificationTime.Click += new System.EventHandler(this.btnGetModificationTime_Click);
//
// btnGetSize
//
this.btnGetSize.Location = new System.Drawing.Point(418, 41);
this.btnGetSize.Name = "btnGetSize";
this.btnGetSize.Size = new System.Drawing.Size(94, 23);
this.btnGetSize.TabIndex = 11;
this.btnGetSize.Text = "SIZE";
this.btnGetSize.UseVisualStyleBackColor = true;
this.btnGetSize.Click += new System.EventHandler(this.btnGetSize_Click);
//
// btnNameList
//
this.btnNameList.Location = new System.Drawing.Point(518, 41);
this.btnNameList.Name = "btnNameList";
this.btnNameList.Size = new System.Drawing.Size(94, 23);
this.btnNameList.TabIndex = 12;
this.btnNameList.Text = "NLIST";
this.btnNameList.UseVisualStyleBackColor = true;
this.btnNameList.Click += new System.EventHandler(this.btnNameList_Click);
//
// btnList
//
this.btnList.Location = new System.Drawing.Point(318, 70);
this.btnList.Name = "btnList";
this.btnList.Size = new System.Drawing.Size(94, 23);
this.btnList.TabIndex = 13;
this.btnList.Text = "LIST";
this.btnList.UseVisualStyleBackColor = true;
this.btnList.Click += new System.EventHandler(this.btnList_Click);
//
// btnMakeDirectory
//
this.btnMakeDirectory.Location = new System.Drawing.Point(418, 70);
this.btnMakeDirectory.Name = "btnMakeDirectory";
this.btnMakeDirectory.Size = new System.Drawing.Size(94, 23);
this.btnMakeDirectory.TabIndex = 14;
this.btnMakeDirectory.Text = "MKD";
this.btnMakeDirectory.UseVisualStyleBackColor = true;
this.btnMakeDirectory.Click += new System.EventHandler(this.btnMakeDirectory_Click);
//
// btnRemoveDirectory
//
this.btnRemoveDirectory.Location = new System.Drawing.Point(518, 70);
this.btnRemoveDirectory.Name = "btnRemoveDirectory";
this.btnRemoveDirectory.Size = new System.Drawing.Size(94, 23);
this.btnRemoveDirectory.TabIndex = 15;
this.btnRemoveDirectory.Text = "RMD";
this.btnRemoveDirectory.UseVisualStyleBackColor = true;
this.btnRemoveDirectory.Click += new System.EventHandler(this.btnRemoveDirectory_Click);
//
// btnRename
//
this.btnRename.Location = new System.Drawing.Point(318, 99);
this.btnRename.Name = "btnRename";
this.btnRename.Size = new System.Drawing.Size(94, 23);
this.btnRename.TabIndex = 16;
this.btnRename.Text = "RENAME";
this.btnRename.UseVisualStyleBackColor = true;
this.btnRename.Click += new System.EventHandler(this.btnRename_Click);
//
// btnUpload
//
this.btnUpload.Location = new System.Drawing.Point(418, 99);
this.btnUpload.Name = "btnUpload";
this.btnUpload.Size = new System.Drawing.Size(94, 23);
this.btnUpload.TabIndex = 17;
this.btnUpload.Text = "STOR";
this.btnUpload.UseVisualStyleBackColor = true;
this.btnUpload.Click += new System.EventHandler(this.btnUpload_Click);
//
// btnUploadUnique
//
this.btnUploadUnique.Location = new System.Drawing.Point(518, 99);
this.btnUploadUnique.Name = "btnUploadUnique";
this.btnUploadUnique.Size = new System.Drawing.Size(94, 23);
this.btnUploadUnique.TabIndex = 18;
this.btnUploadUnique.Text = "STOU";
this.btnUploadUnique.UseVisualStyleBackColor = true;
this.btnUploadUnique.Click += new System.EventHandler(this.btnUploadUnique_Click);
//
// Form1
//
this.ClientSize = new System.Drawing.Size(624, 321);
this.Controls.Add(this.btnUploadUnique);
this.Controls.Add(this.btnUpload);
this.Controls.Add(this.btnRename);
this.Controls.Add(this.btnRemoveDirectory);
this.Controls.Add(this.btnMakeDirectory);
this.Controls.Add(this.btnList);
this.Controls.Add(this.btnNameList);
this.Controls.Add(this.btnGetSize);
this.Controls.Add(this.btnGetModificationTime);
this.Controls.Add(this.btnDownload);
this.Controls.Add(this.btnDelete);
this.Controls.Add(this.btnAppend);
this.Controls.Add(this.txtOutput);
this.Controls.Add(this.txtNewRemotePath);
this.Controls.Add(this.txtRemotePath);
this.Controls.Add(this.txtLocalPath);
this.Controls.Add(this.txtPassword);
this.Controls.Add(this.txtUsername);
this.Controls.Add(this.txtServer);
this.Name = "Form1";
this.Text = "FTP Client";
this.ResumeLayout(false);
this.PerformLayout();
}

private System.Windows.Forms.TextBox txtServer;
private System.Windows.Forms.TextBox txtUsername;
private System.Windows.Forms.TextBox txtPassword;
private System.Windows.Forms.TextBox txtLocalPath;
private System.Windows.Forms.TextBox txtRemotePath;
private System.Windows.Forms.TextBox txtNewRemotePath;
private System.Windows.Forms.TextBox txtOutput;
private System.Windows.Forms.Button btnAppend;
private System.Windows.Forms.Button btnDelete;
private System.Windows.Forms.Button btnDownload;
private System.Windows.Forms.Button btnGetModificationTime;
private System.Windows.Forms.Button btnGetSize;
private System.Windows.Forms.Button btnNameList;
private System.Windows.Forms.Button btnList;
private System.Windows.Forms.Button btnMakeDirectory;
private System.Windows.Forms.Button btnRemoveDirectory;
private System.Windows.Forms.Button btnRename;
private System.Windows.Forms.Button btnUpload;
private System.Windows.Forms.Button btnUploadUnique;
}
}










FtpClientApp



using System.IO;
using System.Net;
using System.Text;
using System.Windows.Forms;
using System;

namespace FtpClientApp
{
partial class Form1
{
private System.ComponentModel.IContainer components = null;

protected override void Dispose(bool disposing)
{
if (disposing && (components != null))
{
components.Dispose();
}
base.Dispose(disposing);
}

private void InitializeComponent()
{
this.txtServer = new System.Windows.Forms.TextBox();
this.txtUsername = new System.Windows.Forms.TextBox();
this.txtPassword = new System.Windows.Forms.TextBox();
this.txtLocalPath = new System.Windows.Forms.TextBox();
this.txtRemotePath = new System.Windows.Forms.TextBox();
this.txtNewRemotePath = new System.Windows.Forms.TextBox();
this.txtOutput = new System.Windows.Forms.TextBox();
this.btnAppend = new System.Windows.Forms.Button();
this.btnDelete = new System.Windows.Forms.Button();
this.btnDownload = new System.Windows.Forms.Button();
this.btnGetModificationTime = new System.Windows.Forms.Button();
this.btnGetSize = new System.Windows.Forms.Button();
this.btnNameList = new System.Windows.Forms.Button();
this.btnList = new System.Windows.Forms.Button();
this.btnMakeDirectory = new System.Windows.Forms.Button();
this.btnRemoveDirectory = new System.Windows.Forms.Button();
this.btnRename = new System.Windows.Forms.Button();
this.btnUpload = new System.Windows.Forms.Button();
this.btnUploadUnique = new System.Windows.Forms.Button();
this.SuspendLayout();
//
// txtServer
//
this.txtServer.Location = new System.Drawing.Point(12, 12);
this.txtServer.Name = "txtServer";
this.txtServer.Size = new System.Drawing.Size(300, 23);
this.txtServer.TabIndex = 0;
this.txtServer.PlaceholderText = "FTP server (ftp://example.com)";
//
// txtUsername
//
this.txtUsername.Location = new System.Drawing.Point(12, 41);
this.txtUsername.Name = "txtUsername";
this.txtUsername.Size = new System.Drawing.Size(145, 23);
this.txtUsername.TabIndex = 1;
this.txtUsername.PlaceholderText = "Username";
//
// txtPassword
//
this.txtPassword.Location = new System.Drawing.Point(167, 41);
this.txtPassword.Name = "txtPassword";
this.txtPassword.Size = new System.Drawing.Size(145, 23);
this.txtPassword.TabIndex = 2;
this.txtPassword.PlaceholderText = "Password";
this.txtPassword.UseSystemPasswordChar = true;
//
// txtLocalPath
//
this.txtLocalPath.Location = new System.Drawing.Point(12, 70);
this.txtLocalPath.Name = "txtLocalPath";
this.txtLocalPath.Size = new System.Drawing.Size(300, 23);
this.txtLocalPath.TabIndex = 3;
this.txtLocalPath.PlaceholderText = "Local path (for upload/download)";
//
// txtRemotePath
//
this.txtRemotePath.Location = new System.Drawing.Point(12, 99);
this.txtRemotePath.Name = "txtRemotePath";
this.txtRemotePath.Size = new System.Drawing.Size(300, 23);
this.txtRemotePath.TabIndex = 4;
this.txtRemotePath.PlaceholderText = "Remote path (file or directory)";
//
// txtNewRemotePath
//
this.txtNewRemotePath.Location = new System.Drawing.Point(12, 128);
this.txtNewRemotePath.Name = "txtNewRemotePath";
this.txtNewRemotePath.Size = new System.Drawing.Size(300, 23);
this.txtNewRemotePath.TabIndex = 5;
this.txtNewRemotePath.PlaceholderText = "New remote path (for rename)";
//
// txtOutput
//
this.txtOutput.Location = new System.Drawing.Point(12, 157);
this.txtOutput.Multiline = true;
this.txtOutput.Name = "txtOutput";
this.txtOutput.ScrollBars = System.Windows.Forms.ScrollBars.Vertical;
this.txtOutput.Size = new System.Drawing.Size(400, 150);
this.txtOutput.TabIndex = 6;
//
// btnAppend
//
this.btnAppend.Location = new System.Drawing.Point(318, 12);
this.btnAppend.Name = "btnAppend";
this.btnAppend.Size = new System.Drawing.Size(94, 23);
this.btnAppend.TabIndex = 7;
this.btnAppend.Text = "APPE";
this.btnAppend.UseVisualStyleBackColor = true;
this.btnAppend.Click += new System.EventHandler(this.btnAppend_Click);
//
// btnDelete
//
this.btnDelete.Location = new System.Drawing.Point(418, 12);
this.btnDelete.Name = "btnDelete";
this.btnDelete.Size = new System.Drawing.Size(94, 23);
this.btnDelete.TabIndex = 8;
this.btnDelete.Text = "DELE";
this.btnDelete.UseVisualStyleBackColor = true;
this.btnDelete.Click += new System.EventHandler(this.btnDelete_Click);
//
// btnDownload
//
this.btnDownload.Location = new System.Drawing.Point(518, 12);
this.btnDownload.Name = "btnDownload";
this.btnDownload.Size = new System.Drawing.Size(94, 23);
this.btnDownload.TabIndex = 9;
this.btnDownload.Text = "RETR";
this.btnDownload.UseVisualStyleBackColor = true;
this.btnDownload.Click += new System.EventHandler(this.btnDownload_Click);
//
// btnGetModificationTime
//
this.btnGetModificationTime.Location = new System.Drawing.Point(318, 41);
this.btnGetModificationTime.Name = "btnGetModificationTime";
this.btnGetModificationTime.Size = new System.Drawing.Size(94, 23);
this.btnGetModificationTime.TabIndex = 10;
this.btnGetModificationTime.Text = "MDTM";
this.btnGetModificationTime.UseVisualStyleBackColor = true;
this.btnGetModificationTime.Click += new System.EventHandler(this.btnGetModificationTime_Click);
//
// btnGetSize
//
using System;
using System.IO;
using System.Net;
using System.Text;
using System.Windows.Forms;

namespace FtpClientApp
{
public partial class Form1 : Form
{
public Form1()
{
InitializeComponent();
}

// Метод, який створює та налаштовує FtpWebRequest
private FtpWebRequest CreateRequest(string method, string remotePath)
{
string ftpServer = txtServer.Text.Trim(); // наприклад, "ftp://example.com"
string username = txtUsername.Text.Trim();
string password = txtPassword.Text;
if (!ftpServer.EndsWith("/"))
ftpServer += "/";

var request = (FtpWebRequest)WebRequest.Create(ftpServer + remotePath);
request.Method = method;
request.Credentials = new NetworkCredential(username, password);
request.UseBinary = true;
request.KeepAlive = false;
request.EnableSsl = false; // якщо потрібно SSL – встановіть true
return request;
}

// APPE – дозапис до файлу на сервері
private void btnAppend_Click(object sender, EventArgs e)
{
string localFile = txtLocalPath.Text.Trim();
string remoteFile = txtRemotePath.Text.Trim();
try
{
var request = CreateRequest(WebRequestMethods.Ftp.AppendFile, remoteFile);
using (Stream requestStream = request.GetRequestStream())
using (FileStream fileStream = File.OpenRead(localFile))
{
byte[] buffer = new byte[4096];
int bytesRead;
while ((bytesRead = fileStream.Read(buffer, 0, buffer.Length)) > 0)
requestStream.Write(buffer, 0, bytesRead);
}
using (var response = (FtpWebResponse)request.GetResponse())
MessageBox.Show($"APPE завершено. Статус: {response.StatusDescription}");
}
catch (Exception ex)
{
MessageBox.Show("Помилка APPE: " + ex.Message);
}
}

// DELE – видалення файлу
private void btnDelete_Click(object sender, EventArgs e)
{
string remoteFile = txtRemotePath.Text.Trim();
try
{
var request = CreateRequest(WebRequestMethods.Ftp.DeleteFile, remoteFile);
using (var response = (FtpWebResponse)request.GetResponse())
MessageBox.Show($"DELE завершено. Статус: {response.StatusDescription}");
}
catch (Exception ex)
{
MessageBox.Show("Помилка DELE: " + ex.Message);
}
}

// RETR – завантажити файл із сервера
private void btnDownload_Click(object sender, EventArgs e)
{
string remoteFile = txtRemotePath.Text.Trim();
string localFile = txtLocalPath.Text.Trim();
try
{
var request = CreateRequest(WebRequestMethods.Ftp.DownloadFile, remoteFile);
using (var response = (FtpWebResponse)request.GetResponse())
using (var responseStream = response.GetResponseStream())
using (var fileStream = File.Create(localFile))
{
byte[] buffer = new byte[4096];
int bytesRead;
while ((bytesRead = responseStream.Read(buffer, 0, buffer.Length)) > 0)
fileStream.Write(buffer, 0, bytesRead);
}
MessageBox.Show("RETR завершено успішно.");
}
catch (Exception ex)
{
MessageBox.Show("Помилка RETR: " + ex.Message);
}
}
// MDTM – отримати час модифікації файлу
private void btnGetModificationTime_Click(object sender, EventArgs e)
{
string remoteFile = txtRemotePath.Text.Trim();
try
{
var request = CreateRequest(WebRequestMethods.Ftp.GetDateTimestamp, remoteFile);
using (var response = (FtpWebResponse)request.GetResponse())
{
DateTime modifyDate = response.LastModified;
MessageBox.Show($"Час модифікації: {modifyDate.ToString("yyyy-MM-dd HH:mm:ss")}");
}
}
catch (Exception ex)
{
MessageBox.Show("Помилка MDTM: " + ex.Message);
}
}

// SIZE – отримати розмір файлу
private void btnGetSize_Click(object sender, EventArgs e)
{
string remoteFile = txtRemotePath.Text.Trim();
try
{
var request = CreateRequest(WebRequestMethods.Ftp.GetFileSize, remoteFile);
using (var response = (FtpWebResponse)request.GetResponse())
{
long size = response.ContentLength;
MessageBox.Show($"Розмір файлу: {size} байт");
}
}
catch (Exception ex)
{
MessageBox.Show("Помилка SIZE: " + ex.Message);
}
}

// NLIST – отримати список імен (файлів/папок без деталізації)
private void btnNameList_Click(object sender, EventArgs e)
{
string remoteDir = txtRemotePath.Text.Trim();
try
{
var request = CreateRequest(WebRequestMethods.Ftp.ListDirectory, remoteDir);
using (var response = (FtpWebResponse)request.GetResponse())
using (var reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
{
string names = reader.ReadToEnd();
txtOutput.Text = names;
}
}
catch (Exception ex)
{
MessageBox.Show("Помилка NLIST: " + ex.Message);
}
}

// LIST – отримати детальний список вмісту (з датами, розмірами тощо)
private void btnList_Click(object sender, EventArgs e)
{
string remoteDir = txtRemotePath.Text.Trim();
try
{
var request = CreateRequest(WebRequestMethods.Ftp.ListDirectoryDetails, remoteDir);
using (var response = (FtpWebResponse)request.GetResponse())
using (var reader = new StreamReader(response.GetResponseStream(), Encoding.UTF8))
{
string details = reader.ReadToEnd();
txtOutput.Text = details;
}
}
catch (Exception ex)
{
MessageBox.Show("Помилка LIST: " + ex.Message);
}
}

// MKD – створити папку
private void btnMakeDirectory_Click(object sender, EventArgs e)
{
string remoteDir = txtRemotePath.Text.Trim();
try
{
var request = CreateRequest(WebRequestMethods.Ftp.MakeDirectory, remoteDir);
using (var response = (FtpWebResponse)request.GetResponse())
MessageBox.Show($"MKD завершено. Статус: {response.StatusDescription}");
}
catch (Exception ex)
{
MessageBox.Show("Помилка MKD: " + ex.Message);
}
}

// RMD – видалити папку
private void btnRemoveDirectory_Click(object sender, EventArgs e)
{
string remoteDir = txtRemotePath.Text.Trim();
try
{
var request = CreateRequest(WebRequestMethods.Ftp.RemoveDirectory, remoteDir);
using (var response = (FtpWebResponse)request.GetResponse())
MessageBox.Show($"RMD завершено. Статус: {response.StatusDescription}");
}
catch (Exception ex)
{
MessageBox.Show("Помилка RMD: " + ex.Message);
}
}

// RENAME – перейменувати файл або папку (потрібно два запити: один для встановлення імені початку, інший – нове ім’я)
private void btnRename_Click(object sender, EventArgs e)
{
string remoteOld = txtRemotePath.Text.Trim(); // в цьому полі вводиться старий шлях
string remoteNew = txtNewRemotePath.Text.Trim(); // в цьому полі – новий шлях
try
{
var request = CreateRequest(WebRequestMethods.Ftp.Rename, remoteOld);
request.RenameTo = remoteNew;
using (var response = (FtpWebResponse)request.GetResponse())
MessageBox.Show($"RENAME завершено. Статус: {response.StatusDescription}");
}
catch (Exception ex)
{
MessageBox.Show("Помилка RENAME: " + ex.Message);
}
}

// STOR – закинути (завантажити) файл на сервер
private void btnUpload_Click(object sender, EventArgs e)
{
string localFile = txtLocalPath.Text.Trim();
string remoteFile = txtRemotePath.Text.Trim();
try
{
var request = CreateRequest(WebRequestMethods.Ftp.UploadFile, remoteFile);
using (Stream requestStream = request.GetRequestStream())
using (FileStream fileStream = File.OpenRead(localFile))
{
byte[] buffer = new byte[4096];
int bytesRead;
while ((bytesRead = fileStream.Read(buffer, 0, buffer.Length)) > 0)
requestStream.Write(buffer, 0, bytesRead);
}
using (var response = (FtpWebResponse)request.GetResponse())
MessageBox.Show($"STOR завершено. Статус: {response.StatusDescription}");
}
catch (Exception ex)
{
MessageBox.Show("Помилка STOR: " + ex.Message);
}
}

// STOU – завантаження з генерацією унікального імені (якщо FTP-сервер підтримує)
private void btnUploadUnique_Click(object sender, EventArgs e)
{
string localFile = txtLocalPath.Text.Trim();
string remoteDir = txtRemotePath.Text.Trim(); // вказуємо папку, в якій створюється унікальний файл
try
{
var request = CreateRequest(WebRequestMethods.Ftp.UploadFileWithUniqueName, remoteDir);
using (Stream requestStream = request.GetRequestStream())
using (FileStream fileStream = File.OpenRead(localFile))
{
byte[] buffer = new byte[4096];
int bytesRead;
while ((bytesRead = fileStream.Read(buffer, 0, buffer.Length)) > 0)
requestStream.Write(buffer, 0, bytesRead);
}
using (var response = (FtpWebResponse)request.GetResponse())
{
string createdName = response.ResponseUri.Segments[response.ResponseUri.Segments.Length - 1];
MessageBox.Show($"STOU завершено. Унікальне ім’я: {createdName}");
}
}
catch (Exception ex)
{
MessageBox.Show("Помилка STOU: " + ex.Message);
}
}
}
}
